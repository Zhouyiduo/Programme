<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PublicControlLibrary"
    xmlns:convers="clr-namespace:PublicControlLibrary.Convers"
    >


    <!-- 可视化树折叠展开的按钮样式 -->
    <Style x:Key="LFExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid >
                        <Rectangle Grid.Column="1" Name="Back" HorizontalAlignment="Right" Width="5" Height="8">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="..\Image\收起-默认.png" ></ImageBrush>
                            </Rectangle.Fill>
                        </Rectangle>                      
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="True">
                            <Setter Property="Fill" TargetName="Back">
                                <Setter.Value>
                                    <ImageBrush ImageSource="..\Image\收起-点击.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- 通过IsChecked判断折叠还是展开 -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="Back">
                                <Setter.Value>
                                    <ImageBrush ImageSource="..\Image\下拉-默认.png"/>
                                </Setter.Value>
                            </Setter>
                            <Setter  Property="Width"  TargetName="Back"  Value="8"/>
                            <Setter  Property="Height"  TargetName="Back"  Value="5"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- （通用）可视化树孩子样式 -->
    <Style x:Key="LFTreeItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <!--<Setter Property="Foreground" Value="#FF565656"/>
        <Setter Property="FontFamily" Value="FZLTZHUNHK"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <convers:IndentConverter  x:Key="indentConverter"/>
                    </ControlTemplate.Resources>

                    <Grid Name="ItemGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid Name = "itemBackground" Grid.Row="0" Margin="{Binding Converter={StaticResource indentConverter},RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                               
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                            </Grid.RowDefinitions>

                            <ToggleButton x:Name="Expander" 
                                          Grid.Column="1"  
                                          Grid.Row="0"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Left"
                                          Style="{StaticResource LFExpandCollapseToggleStyle}"
                                         
                                          />

                            <ContentPresenter Grid.Column="2" Grid.Row="0" x:Name="PART_Header"  
                                              ContentSource="Header" 
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             
                                              />

                        </Grid>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.RowSpan="2"/>
                        
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="itemBackground" Value="#dedede"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#ecf3fc" TargetName="itemBackground"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>


</ResourceDictionary>
